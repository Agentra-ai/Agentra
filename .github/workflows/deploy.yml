name: CI/CD Pipeline for Floxify app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        path: Agentra 

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 22.13.0  

    - name: Install dependencies
      working-directory: Agentra
      run: npm install

    - name: Deploy to EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
        PRIVATE_KEY: ${{ secrets.EC2_KEY }}
        APP_DIR: /home/ubuntu/Agentra
      run: |
        echo "$PRIVATE_KEY" > ssh_key
        chmod 600 ssh_key
        ssh -o StrictHostKeyChecking=no -i ssh_key $USER@$HOST << 'EOF'
          cd /home/ubuntu/Agentra
          git pull origin main
          npm install --omit=dev

          echo "Creating .env file..."
          cat <<EOT > .env
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          AUTH_SECRET=${{ secrets.AUTH_SECRET }}
          GOOGLE_ID=${{ secrets.GOOGLE_ID }}
          GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          PINACONE_API_KEY=${{ secrets.PINACONE_API_KEY }}
          PINECONE_ENVIRONMENT=${{ secrets.PINECONE_ENVIRONMENT }}
          APP_GITHUB_ID=${{ secrets.APP_GITHUB_ID }}
          APP_GITHUB_SECRET=${{ secrets.APP_GITHUB_SECRET }}
          RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
          RESEND_EMAIL_FROM=${{ secrets.RESEND_EMAIL_FROM }}
          RESEND_EMAIL_TO=${{ secrets.RESEND_EMAIL_TO }}
          RESEND_HOST=${{ secrets.RESEND_HOST }}
          RESEND_USERNAME=${{ secrets.RESEND_USERNAME }}
          RESEND_PORT=${{ secrets.RESEND_PORT }}
          NODE_ENV=${{ secrets.NODE_ENV }}
          LEMONSQUEEZY_API_KEY=${{ secrets.LEMONSQUEEZY_API_KEY }}
          LEMONSQUEEZY_STORE_ID=${{ secrets.LEMONSQUEEZY_STORE_ID }}
          LEMONSQUEEZY_WEBHOOK_SECRET=${{ secrets.LEMONSQUEEZY_WEBHOOK_SECRET }}
          NEXT_PUBLIC_APP_URL=${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_S3_ACCESS_KEY_ID=${{ secrets.NEXT_PUBLIC_S3_ACCESS_KEY_ID }}
          NEXT_PUBLIC_S3_BUCKET_NAME=${{ secrets.NEXT_PUBLIC_S3_BUCKET_NAME }}
          NEXT_PUBLIC_S3_SECRET_ACCESS_KEY=${{ secrets.NEXT_PUBLIC_S3_SECRET_ACCESS_KEY }}
          NEXT_PUBLIC_STRIPE_PUBLISH_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISH_KEY }}
          STRIPE_SECRET=${{ secrets.STRIPE_SECRET }}
          WEBHOOK_URL=${{ secrets.WEBHOOK_URL }}
          EOT

          echo "Environment variables set successfully."
          cat .env  # Debugging step to confirm variables are correctly written
          
          echo "Ensuring environment variables are loaded..."
          export $(grep -v '^#' .env | xargs)  # Load environment variables into the shell

          echo "Checking DATABASE_URL:"
          echo \$DATABASE_URL  # Debugging step to ensure it is loaded

          echo "Running Drizzle migrations..."
          npx drizzle-kit generate --config=drizzle.config.ts || { echo "Drizzle migration failed"; exit 1; }

          npm run build
          pm2 restart Agentra || pm2 start npm --name "Agentra" -- start
        EOF
        rm -f ssh_key
